# Generated by Django 4.1.3 on 2022-12-04 12:56

import datetime
from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(help_text='Card number', validators=[django.core.validators.MinValueValidator(1, 'Card numbers start from 1.')], verbose_name='number')),
                ('issue_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Card issue date', verbose_name='issue_date')),
                ('duration_type', models.DurationField(choices=[(datetime.timedelta(days=30), 'One month'), (datetime.timedelta(days=183), 'Six month'), (datetime.timedelta(days=365), 'One year')], default=datetime.timedelta(days=30), help_text='Card duration type', verbose_name='card_duration_type')),
                ('last_used_date', models.DateTimeField(blank=True, help_text='Date of last card usage', null=True, verbose_name='last_used_date')),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Card balance', max_digits=10, validators=[django.core.validators.MinValueValidator(0, 'Balance can not be negative')], verbose_name='balance')),
                ('is_active', models.BooleanField(default=False, help_text='Is card active?', verbose_name='is_active')),
            ],
            options={
                'verbose_name': 'card',
                'verbose_name_plural': 'cards',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='CardSeries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='Card series description', max_length=100, verbose_name='description')),
            ],
            options={
                'verbose_name': 'card_series',
                'verbose_name_plural': 'card_serieses',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Transaction amount', max_digits=10, verbose_name='amount')),
                ('description', models.CharField(help_text='Transaction description', max_length=100, verbose_name='description')),
                ('card', models.ForeignKey(help_text='card', on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='cards.card', verbose_name='card')),
            ],
            options={
                'verbose_name': 'transaction',
                'verbose_name_plural': 'transactions',
                'ordering': ('-id',),
            },
        ),
        migrations.AddField(
            model_name='card',
            name='series',
            field=models.ForeignKey(help_text='ID of card series', on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='cards.cardseries', verbose_name='series'),
        ),
        migrations.AddConstraint(
            model_name='transaction',
            constraint=models.CheckConstraint(check=models.Q(('amount', Decimal('0')), _negated=True), name='zero_amount_transaction_disallowed'),
        ),
        migrations.AddConstraint(
            model_name='card',
            constraint=models.CheckConstraint(check=models.Q(('balance__gte', Decimal('0'))), name='negative_card_balance_disallowed'),
        ),
        migrations.AddConstraint(
            model_name='card',
            constraint=models.UniqueConstraint(fields=('series', 'number'), name='series_number_pair_to_be_unique'),
        ),
    ]
